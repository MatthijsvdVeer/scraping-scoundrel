on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'infra/**'
  workflow_dispatch:
name: 🚀 Deploy

env:
  DOTNET_VERSION: '6.0' 
  ARTIFACT_DIR: './artifacts'

jobs:
  deploy-infra:
    name: 🏗️ Deploy Infrastructure
    runs-on: ubuntu-latest
    outputs:
      functionName: ${{ steps.deploy.outputs.functionName }}
      tableEndpoint: ${{ steps.deploy.outputs.tableEndpoint }}
    steps:
    - uses: actions/checkout@v3

    - name: 🔑 Azure Login 
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🏗️ Deploy
      id: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
        template: ./infra/main.bicep
        parameters: 'tenantId=${{ secrets.AZURE_TENANT_ID }} principalId=${{ secrets.AZURE_CLIENT_ID }}'
        failOnStdErr: false

  build-code:
    name: 🏢 Build Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: 🔧 Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: 🏗️ Build Solution
      shell: pwsh
      run: |
        mkdir ${{ env.ARTIFACT_DIR }}
        dotnet publish ./src/ScrapingScoundrel/ScrapingScoundrel.sln --configuration Release
        Compress-Archive -Path ./src/ScrapingScoundrel/ScrapingScoundrel.Functions/bin/Release/net6.0/publish/* -DestinationPath ${{ env.ARTIFACT_DIR }}/ScrapingScoundrel.Functions.zip
    - name: ⬆️ Upload Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: artifacts
        path: ${{ env.ARTIFACT_DIR }}
  deploy-code:
    name: 🚀 Deploy Code
    runs-on: ubuntu-latest
    needs: [build-code, deploy-infra]
    steps:
    - name: ⬇️ Download artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: artifacts

    - name: 🔑 Azure Login 
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 🚀 Deploy ScrapingScoundrel 🏴‍☠️ Function
      shell: pwsh
      run: |
        az functionapp deploy --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ needs.deploy-infra.outputs.functionName }} --src-path ScrapingScoundrel.Functions.zip --type zip
        az functionapp config appsettings set `
          -g ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} `
          -n ${{ needs.deploy-infra.outputs.functionName }} `
          --settings `
          "TableEndpoint=${{ needs.deploy-infra.outputs.tableEndpoint }}" `
          "TableName=items" `
          "ScrapeEndpoint=${{ secrets.SCRAPE_ENDPOINT }}" `
          "SendGridAppKey=${{ secrets.SENDGRID_KEY }}" `
          "FromEmail=${{ secrets.FROM_EMAIL }}" `
          "ToEmail=${{ secrets.TO_EMAIL }}" `
          "Range=${{ vars.RANGE }}" `
          "Price=${{ vars.PRICE }}"
